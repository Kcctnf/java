package coms;

/**
 * Author : dong
 * Time:2019/5/16
 */
public class Serach {
    /**
     * 搜索专题：
     *   1.知到搜索的应用专题，做几道题
     *   2.学习搜索用的数据结构
     *       1.搜索树
     *          1.红黑树
     *          2.AVL树
     *          3.B树和B+ 树
     *       2.哈希表
     *       3.二分查找
     *       对比这几种数据结构的应用场景
     *   3.Java中搜索相关的集合类
     *   Map（treeMap,hashMap）
     *   Set(treeSet,hashSet)
     *
     *
     *
     *1.搜索树（搜索二叉树）
     *   1.因为高度不确定，所以时间复杂度不确定，引出平衡树
     *   任意节点的左子树的值都小于节点的值
     *            右子树的值都大于节点的值
     *    比我小的，在我左边，比我大的，在我右边
     *
     *
     *
     *2.AVL树（平衡树）
     *    要求树种每一个节点的左子树高度和右子树高度的高度差不能超过1
     *     难度：随着插入的进行，树可能会不平衡
     *           就必须旋转
     *
     *
     *
     *3.红黑树
     *    1.每个结点的颜色或红或黑   0|1
     *    2.红色和红色不能相邻
     *    3.根节点一定是黑色的
     *    4.叶子节点（为null的节点）是黑色的
     *    5.从根到每一个叶子，左右的路径上，黑色的数量一样多
     *
     *
     *
     *4.B树/B+树
     *    数据库中索引的作用是提升查找效率
     *
     *    1.磁盘读写效率低
     *    2.B系列因为多孩子  高度更低 =》读写次数更少
     *   由一二得磁盘搜索用B树系列不用二叉搜索树
     *
     *   B树值除了在叶子中，中间节点也保存
     *   B+树值全部都在叶子节点
     *
     *
     *
     * 5.Java中应用搜索树的类
     *     TreeMap<key,value>
     *     TreeSet<key>
     */
}
